

-Do we want distinct listings or not? Clarify.

-Wrapping in query in a SELECT statement guarantees it will return NULL if no rows returned

-Aggregate by conditions:
SELECT 
    LEFT(trans_date, 7) AS month,
    country, 
    COUNT(id) AS trans_count,
    SUM(state = 'approved') AS approved_count, -- SUM only hwere state = 'approved'
    SUM(amount) AS trans_total_amount,
    SUM((state = 'approved') * amount) AS approved_total_amount
FROM 
    Transactions
GROUP BY 
    month, country;


-Use of NOT IN
SELECT 
  customer_id, 
  COUNT(visit_id) AS count_no_trans 
FROM 
  Visits 
WHERE 
  visit_id NOT IN (
    SELECT 
      visit_id 
    FROM 
      Transactions
  ) 
GROUP BY 
  customer_id


-Careful using SUM() vs. COUNT() in GROUP BY

-Window Functions

window_function(...) OVER (
    [PARTITION BY ...]
    [ORDER BY ...]
    [ROWS BETWEEN ...]
)

LAG()
LEAD()
RANK(var) OVER (PARTITION BY var / ORDER BY var)


-Using WITH keyword:

WITH first_logins AS (
  SELECT
    A.player_id,
    MIN(A.event_date) AS first_login
  FROM
    Activity A
  GROUP BY
    A.player_id
), consec_logins AS (
  SELECT
    COUNT(A.player_id) AS num_logins
  FROM
    first_logins F
    INNER JOIN Activity A ON F.player_id = A.player_id
    AND F.first_login = DATE_SUB(A.event_date, INTERVAL 1 DAY)
)
SELECT
  ROUND(
    (SELECT C.num_logins FROM consec_logins C)
    / (SELECT COUNT(F.player_id) FROM first_logins F)
  , 2) AS fraction;


